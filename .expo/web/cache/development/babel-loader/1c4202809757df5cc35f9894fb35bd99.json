{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/ankitmehta/Desktop/picturesque2.0/screens/CameraScreen.tsx\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport * as React from 'react';\nimport * as Permissions from 'expo-permissions';\nimport * as tf from '@tensorflow/tfjs';\nimport * as ImageManipulator from 'expo-image-manipulator';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { AppConfig } from \"../config\";\nimport { Text, View, ActivityIndicator, ScrollView } from \"../components/Themed\";\nimport { Icon, ListItem } from 'react-native-elements';\nimport * as ImagePicker from 'expo-image-picker';\nimport { ModelService } from \"../components/ModelService\";\n\nvar HomeScreen = function (_React$Component) {\n  _inherits(HomeScreen, _React$Component);\n\n  var _super = _createSuper(HomeScreen);\n\n  function HomeScreen() {\n    var _this;\n\n    _classCallCheck(this, HomeScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      image: {},\n      loading: false,\n      isTfReady: false,\n      isModelReady: false,\n      predictions: null,\n      error: null,\n      timing: null\n    };\n\n    _this._verifyPermissions = function _callee() {\n      var _await$Permissions$ge, status, expires, permissions, _await$Permissions$as, _status, _permissions;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              console.log(\"Verifying Permissions\");\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(Permissions.getAsync(Permissions.CAMERA, Permissions.CAMERA_ROLL));\n\n            case 3:\n              _await$Permissions$ge = _context.sent;\n              status = _await$Permissions$ge.status;\n              expires = _await$Permissions$ge.expires;\n              permissions = _await$Permissions$ge.permissions;\n\n              if (!(status !== 'granted')) {\n                _context.next = 22;\n                break;\n              }\n\n              _context.next = 10;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA, Permissions.CAMERA_ROLL));\n\n            case 10:\n              _await$Permissions$as = _context.sent;\n              _status = _await$Permissions$as.status;\n              _permissions = _await$Permissions$as.permissions;\n\n              if (!(_status === 'granted')) {\n                _context.next = 18;\n                break;\n              }\n\n              console.log(\"Permissions granted\");\n              return _context.abrupt(\"return\", true);\n\n            case 18:\n              alert('Hey! You have not enabled selected permissions');\n              return _context.abrupt(\"return\", false);\n\n            case 20:\n              _context.next = 23;\n              break;\n\n            case 22:\n              return _context.abrupt(\"return\", true);\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this._pickImageFromLibrary = function _callee2() {\n      var status, response;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(_this._verifyPermissions());\n\n            case 2:\n              status = _context2.sent;\n              _context2.prev = 3;\n              _context2.next = 6;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.Images,\n                allowsEditing: true,\n                aspect: [4, 3]\n              }));\n\n            case 6:\n              response = _context2.sent;\n\n              if (!response.cancelled) {\n                _this._classifyImage(response.uri);\n              }\n\n              _context2.next = 13;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](3);\n              console.log(_context2.t0);\n\n            case 13:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[3, 10]], Promise);\n    };\n\n    _this._pickImageFromCamera = function _callee3() {\n      var status, response;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(_this._verifyPermissions());\n\n            case 2:\n              status = _context3.sent;\n              _context3.prev = 3;\n              _context3.next = 6;\n              return _regeneratorRuntime.awrap(ImagePicker.launchCameraAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.Images,\n                allowsEditing: true,\n                aspect: [4, 3]\n              }));\n\n            case 6:\n              response = _context3.sent;\n\n              if (!response.cancelled) {\n                _this._classifyImage(response.uri);\n              }\n\n              _context3.next = 13;\n              break;\n\n            case 10:\n              _context3.prev = 10;\n              _context3.t0 = _context3[\"catch\"](3);\n              console.log(_context3.t0);\n\n            case 13:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[3, 10]], Promise);\n    };\n\n    _this._classifyImage = function _callee4(imageUri) {\n      var res, predictionResponse, predictions;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              _context4.prev = 0;\n              _context4.next = 3;\n              return _regeneratorRuntime.awrap(ImageManipulator.manipulateAsync(imageUri, [{\n                resize: {\n                  width: AppConfig.imageSize,\n                  height: AppConfig.imageSize\n                }\n              }], {\n                compress: 1,\n                format: ImageManipulator.SaveFormat.JPEG,\n                base64: true\n              }));\n\n            case 3:\n              res = _context4.sent;\n\n              _this.setState({\n                image: res\n              });\n\n              console.log('numTensors (before prediction): ' + tf.memory().numTensors);\n\n              _this.setState({\n                predictions: [],\n                error: null,\n                loading: true\n              });\n\n              _context4.next = 9;\n              return _regeneratorRuntime.awrap(_this.modelService.classifyImage(res));\n\n            case 9:\n              predictionResponse = _context4.sent;\n\n              if (predictionResponse.error) {\n                _this.setState({\n                  error: predictionResponse.error,\n                  loading: false\n                });\n              } else {\n                predictions = predictionResponse.predictions || null;\n\n                _this.setState({\n                  predictions: predictions,\n                  timing: predictionResponse.timing,\n                  loading: false\n                });\n              }\n\n              console.log('numTensors (after prediction): ' + tf.memory().numTensors);\n              _context4.next = 17;\n              break;\n\n            case 14:\n              _context4.prev = 14;\n              _context4.t0 = _context4[\"catch\"](0);\n              console.log('Exception Error: ', _context4.t0);\n\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, [[0, 14]], Promise);\n    };\n\n    return _this;\n  }\n\n  _createClass(HomeScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      return _regeneratorRuntime.async(function componentDidMount$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              this.setState({\n                loading: true\n              });\n              _context5.next = 3;\n              return _regeneratorRuntime.awrap(ModelService.create(AppConfig.imageSize));\n\n            case 3:\n              this.modelService = _context5.sent;\n              this.setState({\n                isTfReady: true,\n                isModelReady: true,\n                loading: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var modelLoadingStatus = this.state.isModelReady ? \"Yes\" : \"No\";\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 9\n        }\n      }, React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, React.createElement(View, {\n        style: styles.titleContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        h1: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }\n      }, AppConfig.title)), React.createElement(View, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 19\n        }\n      }, \"Model Status: \", modelLoadingStatus)), React.createElement(View, {\n        style: styles.actionsContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }\n      }, React.createElement(View, {\n        style: styles.callToActionContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }\n      }, React.createElement(Icon, {\n        name: \"camera-alt\",\n        raised: true,\n        onPress: this._pickImageFromCamera,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }\n      }), React.createElement(Icon, {\n        name: \"image\",\n        raised: true,\n        onPress: this._pickImageFromLibrary,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }))), React.createElement(View, {\n        style: styles.imageContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }\n      }, React.createElement(Image, {\n        source: this.state.image,\n        style: {\n          height: 200,\n          width: 200\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }\n      })), React.createElement(View, {\n        style: styles.predictionsContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }\n      }, this.renderPredictions())));\n    }\n  }, {\n    key: \"renderPredictions\",\n    value: function renderPredictions() {\n      var _this2 = this;\n\n      if (this.state.loading) {\n        return React.createElement(ActivityIndicator, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 18\n          }\n        });\n      }\n\n      var predictions = this.state.predictions || [];\n\n      if (predictions.length > 0) {\n        var _this$state$timing, _this$state$timing2, _this$state$timing3, _this$state$timing4, _this$state$timing5;\n\n        return React.createElement(View, {\n          style: styles.predictionsContentContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }\n        }, React.createElement(Text, {\n          h3: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }\n        }, \"Predictions\"), React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }\n        }, predictions.map(function (item, index) {\n          return React.createElement(ListItem, {\n            key: index,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 31\n            }\n          }, React.createElement(ListItem.Content, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }\n          }, React.createElement(ListItem.Title, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 35\n            }\n          }, item.className), React.createElement(ListItem.Subtitle, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 35\n            }\n          }, \"prob: \" + item.probability.toFixed(AppConfig.precision))));\n        })), React.createElement(Text, {\n          h3: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 19\n          }\n        }, \"Timing (ms)\"), React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 19\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 21\n          }\n        }, \"total time: \", (_this$state$timing = this.state.timing) == null ? void 0 : _this$state$timing.totalTime), React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 21\n          }\n        }, \"loading time: \", (_this$state$timing2 = this.state.timing) == null ? void 0 : _this$state$timing2.imageLoadingTime), React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 21\n          }\n        }, \"preprocessing time: \", (_this$state$timing3 = this.state.timing) == null ? void 0 : _this$state$timing3.imagePreprocessing), React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }\n        }, \"prediction time: \", (_this$state$timing4 = this.state.timing) == null ? void 0 : _this$state$timing4.imagePrediction), React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }\n        }, \"decode time: \", (_this$state$timing5 = this.state.timing) == null ? void 0 : _this$state$timing5.imageDecodePrediction)));\n      } else {\n        return null;\n      }\n    }\n  }]);\n\n  return HomeScreen;\n}(React.Component);\n\nHomeScreen.navigationOptions = {\n  header: null\n};\nexport { HomeScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    paddingTop: 5,\n    flex: 1\n  },\n  contentContainer: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  titleContainer: {\n    alignItems: 'center',\n    marginTop: 10,\n    justifyContent: 'center'\n  },\n  actionsContainer: {\n    alignItems: 'center',\n    marginTop: 5,\n    marginBottom: 5\n  },\n  imageContainer: {\n    alignItems: 'center'\n  },\n  callToActionContainer: {\n    flexDirection: \"row\"\n  },\n  feedBackActionsContainer: {\n    flexDirection: \"row\"\n  },\n  predictionsContainer: {\n    padding: 10,\n    justifyContent: 'center'\n  },\n  predictionsContentContainer: {\n    padding: 10\n  },\n  predictionRow: {\n    flexDirection: \"row\"\n  },\n  predictionRowCategory: {\n    justifyContent: \"space-between\"\n  },\n  predictionRowLabel: {\n    justifyContent: \"space-between\"\n  }\n});","map":{"version":3,"sources":["/Users/ankitmehta/Desktop/picturesque2.0/screens/CameraScreen.tsx"],"names":["React","Permissions","tf","ImageManipulator","AppConfig","Text","View","ActivityIndicator","ScrollView","Icon","ListItem","ImagePicker","ModelService","HomeScreen","state","image","loading","isTfReady","isModelReady","predictions","error","timing","_verifyPermissions","console","log","getAsync","CAMERA","CAMERA_ROLL","status","expires","permissions","askAsync","alert","_pickImageFromLibrary","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","Images","allowsEditing","aspect","response","cancelled","_classifyImage","uri","_pickImageFromCamera","launchCameraAsync","imageUri","manipulateAsync","resize","width","imageSize","height","compress","format","SaveFormat","JPEG","base64","res","setState","memory","numTensors","modelService","classifyImage","predictionResponse","create","modelLoadingStatus","styles","container","titleContainer","title","actionsContainer","callToActionContainer","imageContainer","predictionsContainer","renderPredictions","length","predictionsContentContainer","map","item","index","className","probability","toFixed","precision","totalTime","imageLoadingTime","imagePreprocessing","imagePrediction","imageDecodePrediction","Component","navigationOptions","header","StyleSheet","paddingTop","flex","contentContainer","alignItems","justifyContent","marginTop","marginBottom","flexDirection","feedBackActionsContainer","padding","predictionRow","predictionRowCategory","predictionRowLabel"],"mappings":"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","sourcesContent":["import * as React from 'react';\n\n//import { Text, View } from '../components/Themed';\n\nimport * as Permissions from 'expo-permissions'\nimport * as tf from '@tensorflow/tfjs';\nimport * as ImageManipulator from 'expo-image-manipulator';\n\n\nimport {\n  Image,\n  StyleSheet,\n} from 'react-native';\nimport {AppConfig} from \"../config\"\n\nimport {Text ,View,getColor,ActivityIndicator,ScrollView} from '../components/Themed'\n\nimport {Icon, ListItem} from 'react-native-elements';\n\n\nimport * as ImagePicker from 'expo-image-picker';\nimport { ModelService, IModelPredictionResponse,IModelPredictionTiming,ModelPrediction } from '../components/ModelService';\n\n\ntype State = {\n  image: ImageManipulator.ImageResult | {}; \n  loading:boolean;\n  isTfReady: boolean;\n  isModelReady: boolean;\n  predictions: ModelPrediction[]|null;\n  error:string|null;\n  timing:IModelPredictionTiming|null|undefined;\n};\n\nexport default class HomeScreen extends React.Component<{},State> {\n  static navigationOptions = {\n    header: null,\n  };\n\n  state:State = {\n      image: {},\n      loading: false,\n      isTfReady: false,\n      isModelReady: false,\n      predictions: null,\n      error:null,\n      timing:null\n  }\n\n  modelService!:ModelService;\n\n  async componentDidMount() {\n    this.setState({ loading: true });\n    this.modelService = await ModelService.create(AppConfig.imageSize);\n    this.setState({ isTfReady: true,isModelReady: true,loading: false  });\n  }\n\n  render() {\n\n    const modelLoadingStatus = this.state.isModelReady ? \"Yes\" : \"No\";\n    // contentContainerStyle={styles.contentContainer}\n    return (\n        <ScrollView style={styles.container}>\n            <View style={styles.container} >\n\n                <View style={styles.titleContainer}>\n                    <Text h1>{AppConfig.title}</Text>\n                </View>\n\n\n                <View>\n                  <Text>Model Status: {modelLoadingStatus}</Text>\n                </View>\n\n                <View style={styles.actionsContainer}>\n                    <View style={styles.callToActionContainer}>\n                        <Icon name='camera-alt' raised onPress={this._pickImageFromCamera}/>\n                        <Icon name='image' raised onPress={this._pickImageFromLibrary}/>\n                    </View>\n                </View>\n\n                <View style={styles.imageContainer}>\n                    <Image source={this.state.image} style={{height: 200, width: 200}}/>\n                </View>\n\n\n                <View style={styles.predictionsContainer}>\n                    {this.renderPredictions()}\n                </View>\n            </View>\n\n        </ScrollView>\n    );\n  }\n\n\n  renderPredictions() {\n      if (this.state.loading) {\n          return <ActivityIndicator/>\n      }\n      let predictions= this.state.predictions || [];\n   \n      if (predictions.length > 0) {\n          return (\n              <View style={styles.predictionsContentContainer}>\n                  <Text h3>Predictions</Text>\n                  <View>\n                      {\n                          predictions.map((item, index) => (\n                              <ListItem key={index} >\n                                <ListItem.Content >\n\n                                  <ListItem.Title>{item.className}</ListItem.Title>\n                                  <ListItem.Subtitle>{`prob: ${item.probability.toFixed(AppConfig.precision)}`}</ListItem.Subtitle>\n                                </ListItem.Content>\n\n                              </ListItem>\n                          ))\n                      }\n                  </View>\n\n\n                  <Text h3>Timing (ms)</Text>\n                  <View>\n                    <Text>total time: {this.state.timing?.totalTime}</Text>\n                    <Text>loading time: {this.state.timing?.imageLoadingTime}</Text>\n                    <Text>preprocessing time: {this.state.timing?.imagePreprocessing}</Text>\n                    <Text>prediction time: {this.state.timing?.imagePrediction}</Text>\n                    <Text>decode time: {this.state.timing?.imageDecodePrediction}</Text>\n                   \n                  </View>\n\n              </View>\n          )\n      } else {\n          return null\n      }\n  }\n\n\n  _verifyPermissions = async () => {\n      console.log(\"Verifying Permissions\");\n      const { status, expires, permissions } = await Permissions.getAsync(Permissions.CAMERA, Permissions.CAMERA_ROLL);\n\n      if (status !== 'granted') {\n          const { status, permissions }  = await Permissions.askAsync(Permissions.CAMERA, Permissions.CAMERA_ROLL)\n        \n          if (status === 'granted') {\n              console.log(\"Permissions granted\");\n              return true\n          } else {\n              alert('Hey! You have not enabled selected permissions');\n              return false\n          }\n\n      }else{\n          return true;\n      }\n  };\n\n  _pickImageFromLibrary = async () => {\n      const status = await this._verifyPermissions();\n\n      try {\n        let response = await ImagePicker.launchImageLibraryAsync({\n          mediaTypes: ImagePicker.MediaTypeOptions.Images,\n          allowsEditing: true,\n          aspect: [4, 3]\n        })\n\n        if (!response.cancelled) {\n          //const source = { uri: response.uri }\n\n          //this.setState({ image: source })\n          this._classifyImage(response.uri)\n        }\n      } catch (error) {\n        console.log(error)\n      }\n\n  };\n\n  _pickImageFromCamera = async () => {\n      const status = await this._verifyPermissions();\n\n      try {\n\n        let response = await ImagePicker.launchCameraAsync({\n            mediaTypes: ImagePicker.MediaTypeOptions.Images,\n            allowsEditing: true,\n            aspect: [4, 3]\n        });\n\n        if (!response.cancelled) {\n          //const source = { uri: response.uri }\n          \n          this._classifyImage(response.uri)\n        }\n    }  catch (error) {\n      console.log(error)\n    }\n\n  };\n\n  _classifyImage = async (imageUri:string) => {\n    try {\n      const res:ImageManipulator.ImageResult = await ImageManipulator.manipulateAsync(imageUri,\n        [{ resize: { width:AppConfig.imageSize, height:AppConfig.imageSize }}],\n        { compress: 1, format: ImageManipulator.SaveFormat.JPEG,base64:true }\n        );\n      \n      this.setState({ image: res})\n      console.log('numTensors (before prediction): ' + tf.memory().numTensors);\n      this.setState({ predictions: [] ,error:null , loading:true })\n\n      const predictionResponse = await this.modelService.classifyImage(res);\n      \n      \n      if (predictionResponse.error){\n        this.setState({ error: predictionResponse.error , loading:false})\n      }else{\n        const predictions = predictionResponse.predictions  || null;\n        this.setState({ predictions: predictions, timing:predictionResponse.timing,  loading:false})\n      }\n      \n      \n      //tf.dispose(predictions);\n      console.log('numTensors (after prediction): ' + tf.memory().numTensors);\n\n    } catch (error) {\n      console.log('Exception Error: ', error)\n    }\n  }\n\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n      paddingTop: 5,\n      flex: 1,\n  },\n\n  contentContainer: {\n      alignItems: 'center',\n      justifyContent: 'center',\n  },\n  titleContainer: {\n      alignItems: 'center',\n      marginTop: 10,\n      //flex: 2,\n      justifyContent: 'center',\n  },\n  actionsContainer: {\n      alignItems: 'center',\n      marginTop: 5,\n      marginBottom: 5,\n      //flex: 1,\n  },\n  imageContainer: {\n      alignItems: 'center',\n  },\n  callToActionContainer: {\n      flexDirection: \"row\"\n  },\n\n  feedBackActionsContainer: {\n      flexDirection: \"row\"\n  },\n\n  predictionsContainer: {\n      padding: 10,\n      justifyContent: 'center',\n  },\n\n  predictionsContentContainer: {\n      padding: 10,\n  },\n  predictionRow: {\n      flexDirection: \"row\",\n  },\n  predictionRowCategory: {\n      justifyContent: \"space-between\"\n  },\n  predictionRowLabel: {\n      justifyContent: \"space-between\"\n  }\n});\n\n"]},"metadata":{},"sourceType":"module"}